{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/anantmishra/Desktop/Misc/Vayo/vayo-app/app/lib/mongodb.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\ndeclare global {\n  var mongoose: {\n    conn: typeof mongoose | null;\n    promise: Promise<typeof mongoose> | null;\n  };\n}\n\nconst MONGODB_URI = process.env.MONGODB_URI;\n\nif (!MONGODB_URI) {\n  throw new Error('Please define the MONGODB_URI environment variable inside .env');\n}\n\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function connectDB() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n\n  if (!cached.promise) {\n    const opts = {\n      bufferCommands: false,\n    };\n\n    cached.promise = mongoose.connect(MONGODB_URI!, opts).then((mongoose) => {\n      return mongoose;\n    });\n  }\n\n  try {\n    cached.conn = await cached.promise;\n  } catch (e) {\n    cached.promise = null;\n    throw e;\n  }\n\n  return cached.conn;\n}\n\nexport default connectDB; "],"names":[],"mappings":";;;AAAA;;AASA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAc,MAAM,IAAI,CAAC,CAAC;YAC1D,OAAO;QACT;IACF;IAEA,IAAI;QACF,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACpC,EAAE,OAAO,GAAG;QACV,OAAO,OAAO,GAAG;QACjB,MAAM;IACR;IAEA,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///Users/anantmishra/Desktop/Misc/Vayo/vayo-app/app/models/User.ts"],"sourcesContent":["import { Schema, model, models } from 'mongoose';\n\nconst userSchema = new Schema({\n  company: {\n    type: String,\n    required: [true, 'Company name is required'],\n  },\n  email: {\n    type: String,\n    required: [true, 'Email is required'],\n    unique: true,\n    match: [/\\S+@\\S+\\.\\S+/, 'Please enter a valid email'],\n  },\n  password: {\n    type: String,\n    required: [true, 'Password is required'],\n    minLength: [6, 'Password must be at least 6 characters'],\n  },\n  phone: {\n    type: String,\n    required: [true, 'Phone number is required'],\n  },\n  truckCount: {\n    type: Number,\n    required: [true, 'Number of trucks is required'],\n    min: [0, 'Number of trucks cannot be negative'],\n  },\n  isPremium: {\n    type: Boolean,\n    default: false,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n  role: {\n    type: String,\n    enum: ['owner', 'driver'],\n    default: 'owner',\n  }\n});\n\nexport const User = models.User || model('User', userSchema); "],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,SAAM,CAAC;IAC5B,SAAS;QACP,MAAM;QACN,UAAU;YAAC;YAAM;SAA2B;IAC9C;IACA,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAAoB;QACrC,QAAQ;QACR,OAAO;YAAC;YAAgB;SAA6B;IACvD;IACA,UAAU;QACR,MAAM;QACN,UAAU;YAAC;YAAM;SAAuB;QACxC,WAAW;YAAC;YAAG;SAAyC;IAC1D;IACA,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAA2B;IAC9C;IACA,YAAY;QACV,MAAM;QACN,UAAU;YAAC;YAAM;SAA+B;QAChD,KAAK;YAAC;YAAG;SAAsC;IACjD;IACA,WAAW;QACT,MAAM;QACN,SAAS;IACX;IACA,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;IACA,MAAM;QACJ,MAAM;QACN,MAAM;YAAC;YAAS;SAAS;QACzB,SAAS;IACX;AACF;AAEO,MAAM,OAAO,yGAAA,CAAA,SAAM,CAAC,IAAI,IAAI,CAAA,GAAA,yGAAA,CAAA,QAAK,AAAD,EAAE,QAAQ","debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///Users/anantmishra/Desktop/Misc/Vayo/vayo-app/app/api/auth/register/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport bcrypt from 'bcryptjs';\nimport connectDB from '@/app/lib/mongodb';\nimport { User } from '@/app/models/User';\n\nexport async function POST(req: Request) {\n  try {\n    if (!req.body) {\n      return NextResponse.json(\n        { error: 'No request body provided' },\n        { status: 400 }\n      );\n    }\n\n    const body = await req.json();\n    const { company, email, password, phone, truckCount } = body;\n\n    // Validate required fields\n    if (!company || !email || !password || !phone || !truckCount) {\n      return NextResponse.json(\n        { error: 'All fields are required' },\n        { status: 400 }\n      );\n    }\n\n    // Connect to database\n    await connectDB();\n\n    // Check if user already exists\n    const existingUser = await User.findOne({ email });\n    if (existingUser) {\n      return NextResponse.json(\n        { error: 'User with this email already exists' },\n        { status: 400 }\n      );\n    }\n\n    // Hash password\n    const hashedPassword = await bcrypt.hash(password, 10);\n\n    // Create user\n    const user = await User.create({\n      company,\n      email,\n      password: hashedPassword,\n      phone,\n      truckCount: parseInt(truckCount),\n      isPremium: parseInt(truckCount) > 5\n    });\n\n    // Return success response without sensitive data\n    return NextResponse.json(\n      {\n        message: 'User created successfully',\n        user: {\n          id: user._id,\n          company: user.company,\n          email: user.email,\n          truckCount: user.truckCount,\n          isPremium: user.isPremium\n        }\n      },\n      { status: 201 }\n    );\n\n  } catch (error) {\n    console.error('Registration error:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,IAAI,CAAC,IAAI,IAAI,EAAE;YACb,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA2B,GACpC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG;QAExD,2BAA2B;QAC3B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,YAAY;YAC5D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA0B,GACnC;gBAAE,QAAQ;YAAI;QAElB;QAEA,sBAAsB;QACtB,MAAM,CAAA,GAAA,uHAAA,CAAA,UAAS,AAAD;QAEd,+BAA+B;QAC/B,MAAM,eAAe,MAAM,uHAAA,CAAA,OAAI,CAAC,OAAO,CAAC;YAAE;QAAM;QAChD,IAAI,cAAc;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAsC,GAC/C;gBAAE,QAAQ;YAAI;QAElB;QAEA,gBAAgB;QAChB,MAAM,iBAAiB,MAAM,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;QAEnD,cAAc;QACd,MAAM,OAAO,MAAM,uHAAA,CAAA,OAAI,CAAC,MAAM,CAAC;YAC7B;YACA;YACA,UAAU;YACV;YACA,YAAY,SAAS;YACrB,WAAW,SAAS,cAAc;QACpC;QAEA,iDAAiD;QACjD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,MAAM;gBACJ,IAAI,KAAK,GAAG;gBACZ,SAAS,KAAK,OAAO;gBACrB,OAAO,KAAK,KAAK;gBACjB,YAAY,KAAK,UAAU;gBAC3B,WAAW,KAAK,SAAS;YAC3B;QACF,GACA;YAAE,QAAQ;QAAI;IAGlB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}